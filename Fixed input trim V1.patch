Index: libUDB/libUDB.c
===================================================================
--- libUDB/libUDB.c	(revision 1147)
+++ libUDB/libUDB.c	(working copy)
@@ -190,10 +190,11 @@
 
 void udb_servo_record_trims(void)
 {
+#if (FIXED_TRIMPOINT == 0)	// Do not alter trims from preset when they are fixed
 	int i;
 	for (i=0; i <= NUM_INPUTS; i++)
 		udb_pwTrim[i] = udb_pwIn[i] ;
-	
+#endif	
 	return ;
 }
 
Index: libUDB/radioIn_udb4.c
===================================================================
--- libUDB/radioIn_udb4.c	(revision 1147)
+++ libUDB/radioIn_udb4.c	(working copy)
@@ -49,8 +49,16 @@
 void udb_init_capture(void)
 {
 	int i;
+	
 	for (i=0; i <= NUM_INPUTS; i++)
-		udb_pwIn[i] = udb_pwTrim[i] = 0 ;
+#if (FIXED_TRIMPOINT == 0)
+		udb_pwTrim[i] = udb_pwIn[i] = 0 ;
+#else
+		if(i == THROTTLE_OUTPUT_CHANNEL)
+			udb_pwTrim[i] = udb_pwIn[i] = (THROTTLE_TRIMPOINT * 2) ;
+		else
+			udb_pwTrim[i] = udb_pwIn[i] = (CHANNEL_TRIMPOINT * 2) ;			
+#endif
 	
 	TMR2 = 0 ; 				// initialize timer
 	T2CONbits.TCKPS = 1 ;	// prescaler = 8 option
Index: MatrixPilot/options.h
===================================================================
--- MatrixPilot/options.h	(revision 1149)
+++ MatrixPilot/options.h	(working copy)
@@ -39,7 +39,7 @@
 // UDB4_BOARD  - Board is red, has 8 inputs, 8 output and no gyro daughter-board.
 // See the MatrixPilot wiki for more details on different UDB boards.
 // If building for the UDB4, use the MatrixPilot-udb4.mcw project workspace. 
-#define BOARD_TYPE 							UDB4_BOARD
+#define BOARD_TYPE 							UDB3_BOARD
 
 
 ////////////////////////////////////////////////////////////////////////////////
@@ -308,6 +308,20 @@
 
 
 ////////////////////////////////////////////////////////////////////////////////
+// FIXED TRIMPOINT
+// Instead of sampling the radio inputs at startup, use a fixed value
+// This can be used if you would prefer a static trimpoint between reboots
+// Set FIXED_TRIMPOINT to 1 to use this feature
+// Channel trimpoint is for all channel excluding throttle.  Units in microseconds
+// Throttle trimpoint is only for the throttle channel.
+// NOTE: UDB trimpoints are in 0.5us units.
+#define FIXED_TRIMPOINT					0
+#define CHANNEL_TRIMPOINT				1520
+#define THROTTLE_TRIMPOINT				1125
+
+
+
+////////////////////////////////////////////////////////////////////////////////
 // Serial Output Format (Can be SERIAL_NONE, SERIAL_DEBUG, SERIAL_ARDUSTATION, SERIAL_UDB,
 // SERIAL_UDB_EXTRA,SERIAL_MAVLINK, SERIAL_CAM_TRACK, or SERIAL_OSD_REMZIBI)
 // This determines the format of the output sent out the spare serial port.
Index: MatrixPilot/servoPrepare.c
===================================================================
--- MatrixPilot/servoPrepare.c	(revision 1147)
+++ MatrixPilot/servoPrepare.c	(working copy)
@@ -33,8 +33,12 @@
 {
 	int i;
 	for (i=0; i <= NUM_INPUTS; i++)
-		udb_pwTrim[i] = udb_pwIn[i] = ((i == THROTTLE_INPUT_CHANNEL) ? 0 : 3000) ;
-	
+#if (FIXED_TRIMPOINT == 0)
+		udb_pwIn[i] = udb_pwTrim[i] = ((i == THROTTLE_INPUT_CHANNEL) ? 0 : 3000) ;	
+#else
+		udb_pwTrim[i] = udb_pwIn[i] = ((i == THROTTLE_INPUT_CHANNEL) ? (THROTTLE_TRIMPOINT * 2) : (CHANNEL_TRIMPOINT * 2) ) ;
+#endif
+
 	for (i=0; i <= NUM_OUTPUTS; i++)
 		udb_pwOut[i] = ((i == THROTTLE_OUTPUT_CHANNEL) ? 0 : 3000) ;
 	
